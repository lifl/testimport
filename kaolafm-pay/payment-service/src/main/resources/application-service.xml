<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc
                http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                http://www.springframework.org/schema/aop
                http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 自动扫描组件 -->
    <context:component-scan base-package="com.kaolafm"/>

    <!-- 连接traffic数据库数据源配置 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="${jdbc.user.url}"/>
        <property name="username" value="${jdbc.user.username}"/>
        <property name="password" value="${jdbc.user.password}"/>
        <property name="autoCommit" value="true"/>
        <property name="readOnly" value="false"/>
        <property name="connectionTimeout" value="300000"/>
        <property name="idleTimeout" value="${jdbc.user.idleTimeout}"/>
        <property name="maxLifetime" value="1800000"/>
        <property name="maximumPoolSize" value="${jdbc.user.maximumPoolSize}"/>
        <property name="minimumIdle" value="2"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.kaolafm.payment.entity" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kaolafm.payment.dao"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"
                          proxy-target-class="true" />

    <aop:aspectj-autoproxy />

    <bean id="methodTimeAdvice" class="com.kaolafm.payment.interceptor.MethodTimeAdvice" />
    <aop:config>
        <!--&lt;!&ndash; 用 AspectJ 的语法定义 Pointcut，这里拦截 service 包中的所有方法 &ndash;&gt;-->
        <aop:advisor id="methodTimeLog" advice-ref="methodTimeAdvice"
                     pointcut="execution(* com.kaolafm.payment.service..*(..))" />
    </aop:config>
</beans>